Unit1:
  title: Tools and Software Development Processes
  description: Students should have experience in blogging, coding with Jupyter Notebooks, and GitHub Pages. Understanding of Linux, Python, Markdown, HTML, and JavaScript is expected. Students have previously established a foundation using essential tools and software development processes. Weeks 0-3 will provide a quick review, and students will start their Java coding journey.
#  illustration: *introduction_tools
  start: 0
  end: 3
Unit2:
  title: Java Mini-labs
  description: Students should have an understanding of Fundamentals of Programming from Python, JavaScript, or other backgrounds. In this Unit, students will become familiar with Java types, booleans, iteration, recursion, using and writing objects through Mini-labs. These labs will introduce AP required aspects of Java, FRQ requirements, and review College Board's 10 Units online.
#  illustration: *college_board_fundamentals
  start: 4
  end: 7
Unit3:
  title: Individual/Team Projects, N@tM
  description: In this Unit, students will continue to become familiar with Java development as they learn Web Development using the Spring Framework. Coding will focus on Restful APIs, receiving requests, working with data, and responding to requests. This will teach key Java concepts while using Java Spring framework elements such as a Rest Controller, Plain Old Java Objects (POJOs), Object Relational Model (ORM), and Java Persistent API (JPA).
#  illustration: *web_dev_layers
  start: 8
  end: 12
Unit4:
  title: Warm-up Data Analysis and Sort Project
  description: Trimester 2 will begin with a Mini-project on Sorting and Analysis. Focusing on frontend JavaScript Visualization; Backend Java Sorting, Inheritance, and Polymorphic behavior.
  start: 13
  end: 16
Unit5:
  title: Creative Development Ideas and Concepts
  description: This will be the most creative portion of the year for CSA students. The objective of these weeks is to explore, create ideas, and code concepts that have the growth potential to enable a two-trimester project. Consider frontend design, draw.io database modeling, API plans, JWT designs, big data solutions, and future usefulness. The ideas and code that are most liked by Teachers and Students will be continued and used for N@tM projects. Students should be able to talk about design, do fe/be coding, add data and data structure, add database features, and perform weekly live reviews.
  start: 17
  end: 19
# Unit6:
#   title: Passion Project v1.0 and N@tM Demo
#   description: Each person within "Student Teams" will have their own specialty within their student project that shows Full Stack competency, with a specific focus on Java as backend. Intentions for this period are to have the freedom of a creative project, driven by your individual Issues and team Scrum Board.
#   start: 20
#   end: 24
# Unit7: 
#   title: Data Structures
#   description: A focus on Data Structures that relate to the AP exam. A key requirement is to make your own Algorithmic sorting video. The theme is to produce work that can help you pass the AP Exam and improve your Passion Project. Each student must cover key concepts from the Four AP FRQ types, contain a key Data Structure, and utilize Sorting.
#   illustration: *data_structures
#   start: 25
#   end: 29
# Unit8:
#   title: AP Weeks
#   description: Students will lead several study sessions (20-minute test, followed by review) the week before the exam. In any break in study, students will transition activities back to their final project.
#   illustration: *frq_types
#   start: 30
#   end: 32
# Unit9:
#   title: Passion Project v2.0 and N@tM
#   description: Wrap up your preferred project and data structures. There will be an opportunity to contribute and be published to the NightHawk Coding Society. If your project is selected, then you will receive a high 'A' on the final project.
#   start: 33
#   end: 36